{"name":"Capris","tagline":"Wrapper for doing beautiful commands","body":"Capris\r\n======\r\n\r\nCapris is a MIT-licensed Python library built for writing\r\ncomposable apps that leverage the command line.\r\n\r\nA simple example of writing your own git wrapper, complete\r\nwith other command-line utilities that you love and use on\r\na daily basis:\r\n\r\n```python\r\n>>> from capris import Command\r\n>>> git, grep = Command('git'), Command('grep')\r\n\r\n>>> pipe = git.log(n=10, pretty=\"oneline\") | grep(r'[a-f0-9]\\{40\\}', o=None)\r\n>>> str(pipe)\r\n\"git log -n 10 --pretty=oneline | grep -o [a-f0-9]\\{40\\}\"\r\n\r\n>>> response = pipe.run()\r\n>>> response.status_code\r\n0\r\n>>> print response.std_out\r\n...\r\n```\r\n\r\n`capris` allows you to write code that just calls commands\r\nand helps you focus on writing the *commands that you need*,\r\nnot the code required to handle calling and getting responses\r\nfrom the commands. `capris` does all of the mucking around\r\nwith strings and escaping for you.\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n- DSL for command generation\r\n- Support for nested subcommands\r\n- Smart option generation\r\n- Transactions and redirection\r\n- Built in support for pipes\r\n- Thread safety\r\n- Works with both Python 2 and 3\r\n- High-level unit tests for all classes\r\n- Safe- `capris` doesn't touch the shell\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nTo install Capris, simply:\r\n\r\n```sh\r\n$ pip install capris\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}